{"ast":null,"code":"// src/services/ratingService.js\nimport api from './api'; // axios instance\n\nconst ratingService = {\n  // Fetch all ratings of the logged-in student\n  getMyRatings: async () => {\n    try {\n      // fetch only lecture ratings for logged-in student\n      const response = await api.get('/ratings?rating_type=lecture&limit=50');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching ratings:', error);\n      throw error;\n    }\n  },\n  // Submit a new lecture rating\n  addRating: async ({\n    report_id,\n    rating,\n    comment\n  }) => {\n    try {\n      // rating_type is automatically lecture on backend, no need to send it\n      const response = await api.post('/ratings', {\n        report_id,\n        rating,\n        comment\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error submitting rating:', error);\n      throw error;\n    }\n  },\n  // Lecturer ratings summary (for admins/lecturers)\n  getLecturerSummary: async () => {\n    try {\n      const response = await api.get('/ratings/lecturer/summary');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching lecturer summary:', error);\n      throw error;\n    }\n  }\n};\nexport { ratingService };","map":{"version":3,"names":["api","ratingService","getMyRatings","response","get","data","error","console","addRating","report_id","rating","comment","post","getLecturerSummary"],"sources":["C:/Users/BrainTech/luct-reporting-app15/frontend/src/services/ratingService.js"],"sourcesContent":["// src/services/ratingService.js\r\nimport api from './api'; // axios instance\r\n\r\nconst ratingService = {\r\n  // Fetch all ratings of the logged-in student\r\n  getMyRatings: async () => {\r\n    try {\r\n      // fetch only lecture ratings for logged-in student\r\n      const response = await api.get('/ratings?rating_type=lecture&limit=50');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching ratings:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Submit a new lecture rating\r\n  addRating: async ({ report_id, rating, comment }) => {\r\n    try {\r\n      // rating_type is automatically lecture on backend, no need to send it\r\n      const response = await api.post('/ratings', { report_id, rating, comment });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error submitting rating:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Lecturer ratings summary (for admins/lecturers)\r\n  getLecturerSummary: async () => {\r\n    try {\r\n      const response = await api.get('/ratings/lecturer/summary');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching lecturer summary:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport { ratingService };\r\n"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,OAAO,CAAC,CAAC;;AAEzB,MAAMC,aAAa,GAAG;EACpB;EACAC,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,uCAAuC,CAAC;MACvE,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,SAAS,EAAE,MAAAA,CAAO;IAAEC,SAAS;IAAEC,MAAM;IAAEC;EAAQ,CAAC,KAAK;IACnD,IAAI;MACF;MACA,MAAMR,QAAQ,GAAG,MAAMH,GAAG,CAACY,IAAI,CAAC,UAAU,EAAE;QAAEH,SAAS;QAAEC,MAAM;QAAEC;MAAQ,CAAC,CAAC;MAC3E,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAO,kBAAkB,EAAE,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,2BAA2B,CAAC;MAC3D,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,SAASL,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}