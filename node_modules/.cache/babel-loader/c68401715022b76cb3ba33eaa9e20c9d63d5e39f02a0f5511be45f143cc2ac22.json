{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api/courses\"; // backend endpoint\n\n// Get all courses\nconst getCourses = async () => {\n  const token = localStorage.getItem(\"token\");\n  const response = await axios.get(API_URL, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data; // returns array of courses\n};\n\n// Create a new course\nconst createCourse = async courseData => {\n  const token = localStorage.getItem(\"token\");\n  const payload = {\n    course_code: courseData.course_code,\n    course_name: courseData.course_name,\n    credits: courseData.credits,\n    stream: courseData.stream,\n    program_leader_id: courseData.program_leader_id || null\n  };\n  const response = await axios.post(API_URL, payload, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data; // returns created course\n};\n\n// Update a course\nconst updateCourse = async (id, updatedData) => {\n  const token = localStorage.getItem(\"token\");\n  const payload = {\n    course_code: updatedData.course_code,\n    course_name: updatedData.course_name,\n    credits: updatedData.credits,\n    stream: updatedData.stream,\n    program_leader_id: updatedData.program_leader_id || null\n  };\n  const response = await axios.put(`${API_URL}/${id}`, payload, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data; // returns updated course\n};\n\n// Delete a course\nconst deleteCourse = async id => {\n  const token = localStorage.getItem(\"token\");\n  const response = await axios.delete(`${API_URL}/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data; // returns success message\n};\nexport const courseService = {\n  getCourses,\n  createCourse,\n  updateCourse,\n  deleteCourse\n};","map":{"version":3,"names":["axios","API_URL","getCourses","token","localStorage","getItem","response","get","headers","Authorization","data","createCourse","courseData","payload","course_code","course_name","credits","stream","program_leader_id","post","updateCourse","id","updatedData","put","deleteCourse","delete","courseService"],"sources":["C:/Users/BrainTech/luct-reporting-app15/frontend/src/services/courseService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api/courses\"; // backend endpoint\r\n\r\n// Get all courses\r\nconst getCourses = async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const response = await axios.get(API_URL, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return response.data; // returns array of courses\r\n};\r\n\r\n// Create a new course\r\nconst createCourse = async (courseData) => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const payload = {\r\n    course_code: courseData.course_code,\r\n    course_name: courseData.course_name,\r\n    credits: courseData.credits,\r\n    stream: courseData.stream,\r\n    program_leader_id: courseData.program_leader_id || null,\r\n  };\r\n\r\n  const response = await axios.post(API_URL, payload, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return response.data; // returns created course\r\n};\r\n\r\n// Update a course\r\nconst updateCourse = async (id, updatedData) => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const payload = {\r\n    course_code: updatedData.course_code,\r\n    course_name: updatedData.course_name,\r\n    credits: updatedData.credits,\r\n    stream: updatedData.stream,\r\n    program_leader_id: updatedData.program_leader_id || null,\r\n  };\r\n\r\n  const response = await axios.put(`${API_URL}/${id}`, payload, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return response.data; // returns updated course\r\n};\r\n\r\n// Delete a course\r\nconst deleteCourse = async (id) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const response = await axios.delete(`${API_URL}/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return response.data; // returns success message\r\n};\r\n\r\nexport const courseService = {\r\n  getCourses,\r\n  createCourse,\r\n  updateCourse,\r\n  deleteCourse,\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,mCAAmC,CAAC,CAAC;;AAErD;AACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACN,OAAO,EAAE;IACxCO,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUN,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOG,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,MAAMC,YAAY,GAAG,MAAOC,UAAU,IAAK;EACzC,MAAMT,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMQ,OAAO,GAAG;IACdC,WAAW,EAAEF,UAAU,CAACE,WAAW;IACnCC,WAAW,EAAEH,UAAU,CAACG,WAAW;IACnCC,OAAO,EAAEJ,UAAU,CAACI,OAAO;IAC3BC,MAAM,EAAEL,UAAU,CAACK,MAAM;IACzBC,iBAAiB,EAAEN,UAAU,CAACM,iBAAiB,IAAI;EACrD,CAAC;EAED,MAAMZ,QAAQ,GAAG,MAAMN,KAAK,CAACmB,IAAI,CAAClB,OAAO,EAAEY,OAAO,EAAE;IAClDL,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUN,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOG,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,MAAMU,YAAY,GAAG,MAAAA,CAAOC,EAAE,EAAEC,WAAW,KAAK;EAC9C,MAAMnB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMQ,OAAO,GAAG;IACdC,WAAW,EAAEQ,WAAW,CAACR,WAAW;IACpCC,WAAW,EAAEO,WAAW,CAACP,WAAW;IACpCC,OAAO,EAAEM,WAAW,CAACN,OAAO;IAC5BC,MAAM,EAAEK,WAAW,CAACL,MAAM;IAC1BC,iBAAiB,EAAEI,WAAW,CAACJ,iBAAiB,IAAI;EACtD,CAAC;EAED,MAAMZ,QAAQ,GAAG,MAAMN,KAAK,CAACuB,GAAG,CAAC,GAAGtB,OAAO,IAAIoB,EAAE,EAAE,EAAER,OAAO,EAAE;IAC5DL,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUN,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOG,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,MAAMc,YAAY,GAAG,MAAOH,EAAE,IAAK;EACjC,MAAMlB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACyB,MAAM,CAAC,GAAGxB,OAAO,IAAIoB,EAAE,EAAE,EAAE;IACtDb,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUN,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOG,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMgB,aAAa,GAAG;EAC3BxB,UAAU;EACVS,YAAY;EACZS,YAAY;EACZI;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}