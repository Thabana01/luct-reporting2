{"ast":null,"code":"// frontend/src/services/api.js\nimport axios from \"axios\";\n\n// Base URL for backend\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\n\n// Create Axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\n\n// Add JWT token to every request if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\"); // JWT token stored on login\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Optional: intercept responses to catch errors globally\napi.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    // Optionally redirect to login if token expired\n    console.warn(\"Unauthorized, token may have expired.\");\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","status","console","warn"],"sources":["C:/Users/BrainTech/luct-reporting-app15/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\nimport axios from \"axios\";\n\n// Base URL for backend\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\n\n// Create Axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n});\n\n// Add JWT token to every request if available\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\"); // JWT token stored on login\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Optional: intercept responses to catch errors globally\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response && error.response.status === 401) {\n      // Optionally redirect to login if token expired\n      console.warn(\"Unauthorized, token may have expired.\");\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAEjF;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN;AACX,CAAC,CAAC;;AAEF;AACAI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAZ,GAAG,CAACG,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC1BU,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnD;IACAC,OAAO,CAACC,IAAI,CAAC,uCAAuC,CAAC;EACvD;EACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}